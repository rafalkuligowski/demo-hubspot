"use strict";
/* hs-eslint ignored failing-rules */
/* eslint-disable hubspot-dev/no-unsupported-ts-syntax */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const unfriendlyCodeMapper = Object.freeze({
    UNRESOLVED_IMPORT: (loggable) => {
        const { exporter, id } = loggable;
        const { base: extension } = path_1.default.parse(id);
        return {
            message: `${exporter} is imported by ${extension}, but ${exporter} cannot be resolved. Make sure ${exporter} is installed.`,
            level: 'error',
        };
    },
    MISSING_GLOBAL_NAME: () => {
        return {};
    },
});
const unfriendlyCodeList = Object.freeze(Object.keys(unfriendlyCodeMapper));
function friendlyLoggingPlugin({ logger }) {
    return {
        name: 'ui-extensions-friendly-logging-plugin',
        enforce: 'post',
        onLog(_level, log) {
            if (unfriendlyCodeList.includes(log.code || '')) {
                const { message, level } = _mapMessageToFriendlyVersion(log);
                if (message && level) {
                    logger[level](message);
                }
                return false; // Filter the log message
            }
            return true; // We don't have a friendly log message, let it through
        },
    };
}
function _mapMessageToFriendlyVersion(loggable) {
    var _a, _b;
    const { code } = loggable;
    return (_b = (_a = unfriendlyCodeMapper[code]) === null || _a === void 0 ? void 0 : _a.call(unfriendlyCodeMapper, loggable)) !== null && _b !== void 0 ? _b : {};
}
exports.default = friendlyLoggingPlugin;
