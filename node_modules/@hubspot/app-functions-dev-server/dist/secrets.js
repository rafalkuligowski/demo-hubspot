"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadSecrets = void 0;
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const dotenv_1 = __importDefault(require("dotenv"));
const constants_1 = require("./constants");
function getEnvPath(srcDir) {
    const mode = process.env.NODE_ENV;
    return (mode
        ? [`.env.${mode}.local`, '.env.local', `.env.${mode}`, '.env']
        : ['.env.local', '.env'])
        .map((fileName) => path_1.default.join(srcDir, fileName))
        .find(fs_1.default.existsSync);
}
function loadSecrets(srcDir) {
    // Load secrets into process.env
    dotenv_1.default.config({ path: getEnvPath(srcDir), override: true });
    // Return context secrets
    const secrets = {};
    constants_1.SECRETS_IN_CONTEXT.forEach((secretName) => {
        const secretValue = process.env[secretName];
        if (typeof secretValue === 'string') {
            secrets[secretName] = secretValue;
        }
    });
    return secrets;
}
exports.loadSecrets = loadSecrets;
//# sourceMappingURL=secrets.js.map