"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.throwUnhandledPlatformVersionError = exports.UnhandledPlatformVersionError = exports.formatSeconds = exports.diffLists = exports.filterMap = void 0;
function filterMap(properties, filterKeys) {
    return Object.keys(properties)
        .filter((key) => filterKeys.includes(key))
        .reduce((result, key) => {
        result[key] = properties[key];
        return result;
    }, {});
}
exports.filterMap = filterMap;
function diffLists(before, after) {
    return {
        added: after.filter((item) => !before.includes(item)),
        deleted: before.filter((item) => !after.includes(item)),
    };
}
exports.diffLists = diffLists;
function formatSeconds(ms, fractionDigits = 0) {
    const seconds = Number(ms / 1000.0);
    return seconds > 1
        ? `${seconds.toFixed(fractionDigits)} seconds`
        : `${seconds.toFixed(fractionDigits)} second`;
}
exports.formatSeconds = formatSeconds;
class UnhandledPlatformVersionError extends Error {
    constructor(platformVersion) {
        super(`Unsupported platform version "${platformVersion}"`);
    }
}
exports.UnhandledPlatformVersionError = UnhandledPlatformVersionError;
function throwUnhandledPlatformVersionError(platformVersion) {
    throw new UnhandledPlatformVersionError(platformVersion);
}
exports.throwUnhandledPlatformVersionError = throwUnhandledPlatformVersionError;
//# sourceMappingURL=utils.js.map