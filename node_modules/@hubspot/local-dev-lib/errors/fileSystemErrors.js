"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.throwFileSystemError = exports.getFileSystemError = void 0;
const lang_1 = require("../utils/lang");
const standardErrors_1 = require("./standardErrors");
const i18nKey = 'errors.fileSystemErrors';
function getFileSystemError(error, context) {
    let fileAction = '';
    if (context.read) {
        fileAction = (0, lang_1.i18n)(`${i18nKey}.readAction`);
    }
    else if (context.write) {
        fileAction = (0, lang_1.i18n)(`${i18nKey}.writeAction`);
    }
    else {
        fileAction = (0, lang_1.i18n)(`${i18nKey}.otherAction`);
    }
    const filepath = context.filepath
        ? `"${context.filepath}"`
        : (0, lang_1.i18n)(`${i18nKey}.unknownFilepath`);
    const message = [(0, lang_1.i18n)(`${i18nKey}.baseMessage`, { fileAction, filepath })];
    // Many `fs` errors will be `SystemError`s
    if ((0, standardErrors_1.isSystemError)(error)) {
        message.push((0, lang_1.i18n)(`${i18nKey}.baseMessage`, { errorMessage: error.message }));
    }
    return new Error(message.join(' '), { cause: error });
}
exports.getFileSystemError = getFileSystemError;
/**
 * @throws
 */
function throwFileSystemError(error, context) {
    throw getFileSystemError(error, context);
}
exports.throwFileSystemError = throwFileSystemError;
