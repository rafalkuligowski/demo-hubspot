"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getBuildStatus = exports.buildPackage = exports.getLatestFunctionLog = exports.getFunctionLogs = exports.getRoutes = void 0;
const http_1 = __importDefault(require("../http"));
const FUNCTION_API_PATH = 'cms/v3/functions';
async function getRoutes(accountId) {
    return http_1.default.get(accountId, {
        url: `${FUNCTION_API_PATH}/routes`,
    });
}
exports.getRoutes = getRoutes;
async function getFunctionLogs(accountId, route, params = {}) {
    const { limit = 5 } = params;
    return http_1.default.get(accountId, {
        url: `${FUNCTION_API_PATH}/results/by-route/${encodeURIComponent(route)}`,
        params: { ...params, limit },
    });
}
exports.getFunctionLogs = getFunctionLogs;
async function getLatestFunctionLog(accountId, route) {
    return http_1.default.get(accountId, {
        url: `${FUNCTION_API_PATH}/results/by-route/${encodeURIComponent(route)}/latest`,
    });
}
exports.getLatestFunctionLog = getLatestFunctionLog;
async function buildPackage(accountId, folderPath) {
    return http_1.default.post(accountId, {
        url: `${FUNCTION_API_PATH}/build/async`,
        headers: {
            Accept: 'text/plain',
        },
        data: {
            folderPath,
        },
    });
}
exports.buildPackage = buildPackage;
async function getBuildStatus(accountId, buildId) {
    return http_1.default.get(accountId, {
        url: `${FUNCTION_API_PATH}/build/${buildId}/poll`,
    });
}
exports.getBuildStatus = getBuildStatus;
