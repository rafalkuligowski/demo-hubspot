"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.fetchRepoContents = exports.fetchRepoFileByDownloadUrl = exports.fetchRepoFile = exports.fetchRepoAsZip = exports.fetchRepoReleaseData = void 0;
const axios_1 = __importDefault(require("axios"));
const getAxiosConfig_1 = require("../http/getAxiosConfig");
const GITHUB_REPOS_API = 'https://api.github.com/repos';
const GITHUB_RAW_CONTENT_API_PATH = 'https://raw.githubusercontent.com';
const GITHUB_AUTH_HEADERS = {
    authorization: global && global.githubToken ? `Bearer ${global.githubToken}` : null,
};
// Returns information about the repo's releases. Defaults to "latest" if no tag is provided
// https://docs.github.com/en/rest/releases/releases?apiVersion=2022-11-28#get-a-release-by-tag-name
async function fetchRepoReleaseData(repoPath, tag = '') {
    const URL = `${GITHUB_REPOS_API}/${repoPath}/releases`;
    return axios_1.default.get(`${URL}/${tag ? `tags/${tag}` : 'latest'}`, {
        headers: { ...getAxiosConfig_1.DEFAULT_USER_AGENT_HEADERS, ...GITHUB_AUTH_HEADERS },
    });
}
exports.fetchRepoReleaseData = fetchRepoReleaseData;
// Returns the entire repo content as a zip, using the zipball_url from fetchRepoReleaseData()
// https://docs.github.com/en/rest/repos/contents?apiVersion=2022-11-28#download-a-repository-archive-zip
async function fetchRepoAsZip(zipUrl) {
    return axios_1.default.get(zipUrl, {
        responseType: 'arraybuffer',
        headers: { ...getAxiosConfig_1.DEFAULT_USER_AGENT_HEADERS, ...GITHUB_AUTH_HEADERS },
    });
}
exports.fetchRepoAsZip = fetchRepoAsZip;
// Returns the raw file contents via the raw.githubusercontent endpoint
async function fetchRepoFile(repoPath, filePath, ref) {
    return axios_1.default.get(`${GITHUB_RAW_CONTENT_API_PATH}/${repoPath}/${ref}/${filePath}`, {
        headers: { ...getAxiosConfig_1.DEFAULT_USER_AGENT_HEADERS, ...GITHUB_AUTH_HEADERS },
    });
}
exports.fetchRepoFile = fetchRepoFile;
// Returns the raw file contents via the raw.githubusercontent endpoint
async function fetchRepoFileByDownloadUrl(downloadUrl) {
    return axios_1.default.get(downloadUrl, {
        headers: { ...getAxiosConfig_1.DEFAULT_USER_AGENT_HEADERS, ...GITHUB_AUTH_HEADERS },
    });
}
exports.fetchRepoFileByDownloadUrl = fetchRepoFileByDownloadUrl;
// Returns the contents of a file or directory in a repository by path
// https://docs.github.com/en/rest/repos/contents?apiVersion=2022-11-28#get-repository-content
async function fetchRepoContents(repoPath, path, ref) {
    const refQuery = ref ? `?ref=${ref}` : '';
    return axios_1.default.get(`${GITHUB_REPOS_API}/${repoPath}/contents/${path}${refQuery}`, {
        headers: { ...getAxiosConfig_1.DEFAULT_USER_AGENT_HEADERS, ...GITHUB_AUTH_HEADERS },
    });
}
exports.fetchRepoContents = fetchRepoContents;
