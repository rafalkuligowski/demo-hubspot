"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.addOauthToAccountConfig = exports.getOauthManager = void 0;
const OAuth2Manager_1 = __importDefault(require("../models/OAuth2Manager"));
const auth_1 = require("../constants/auth");
const standardErrors_1 = require("../errors/standardErrors");
const logger_1 = require("./logging/logger");
const getAccountIdentifier_1 = require("../utils/getAccountIdentifier");
const config_1 = require("../config");
const lang_1 = require("../utils/lang");
const i18nKey = 'lib.oauth';
const oauthManagers = new Map();
function writeOauthTokenInfo(accountConfig) {
    const accountId = (0, getAccountIdentifier_1.getAccountIdentifier)(accountConfig);
    logger_1.logger.debug((0, lang_1.i18n)(`${i18nKey}.writeTokenInfo`, { portalId: accountId || '' }));
    (0, config_1.updateAccountConfig)(accountConfig);
    (0, config_1.writeConfig)();
}
function getOauthManager(accountId, accountConfig) {
    if (!oauthManagers.has(accountId)) {
        oauthManagers.set(accountId, OAuth2Manager_1.default.fromConfig(accountConfig, () => writeOauthTokenInfo(accountConfig)));
    }
    return oauthManagers.get(accountId);
}
exports.getOauthManager = getOauthManager;
function addOauthToAccountConfig(oauth) {
    logger_1.logger.log((0, lang_1.i18n)(`${i18nKey}.addOauthToAccountConfig.init`));
    try {
        (0, config_1.updateAccountConfig)({
            ...oauth.account,
            authType: auth_1.AUTH_METHODS.oauth.value,
        });
        (0, config_1.writeConfig)();
        logger_1.logger.success((0, lang_1.i18n)(`${i18nKey}.addOauthToAccountConfig.success`));
    }
    catch (err) {
        (0, standardErrors_1.throwError)(err);
    }
}
exports.addOauthToAccountConfig = addOauthToAccountConfig;
