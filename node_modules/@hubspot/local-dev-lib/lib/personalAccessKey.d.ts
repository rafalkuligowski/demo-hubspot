import { CLIAccount } from '../types/Accounts';
import { Environment } from '../types/Config';
import { HUBSPOT_ACCOUNT_TYPES } from '../constants/config';
import { ValueOf } from '../types/Utils';
type AccessToken = {
    portalId: number;
    accessToken: string;
    expiresAt: string;
    scopeGroups: Array<string>;
    enabledFeatures?: {
        [key: string]: number;
    };
    encodedOAuthRefreshToken: string;
    hubName: string;
    accountType: ValueOf<typeof HUBSPOT_ACCOUNT_TYPES>;
};
export declare function getAccessToken(personalAccessKey: string, env?: Environment, accountId?: number): Promise<AccessToken>;
export declare function accessTokenForPersonalAccessKey(accountId: number): Promise<string | undefined>;
export declare function enabledFeaturesForPersonalAccessKey(accountId: number): Promise<{
    [key: string]: number;
} | undefined>;
export declare function updateConfigWithAccessToken(token: AccessToken, personalAccessKey: string, env?: Environment, name?: string, makeDefault?: boolean): Promise<CLIAccount | null>;
export {};
