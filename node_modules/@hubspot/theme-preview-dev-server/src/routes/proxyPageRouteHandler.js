"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildProxyPageRouteHandler = void 0;
const proxyPage_js_1 = require("../proxyPage.js");
const previewUtils_js_1 = require("../previewUtils.js");
const buildProxyPageRouteHandler = (sessionInfo) => {
    return async (request, response, next) => {
        if (!request.accepts().includes('text/html')) {
            return response.sendStatus(404);
        }
        const domainToProxy = (0, previewUtils_js_1.getSubDomainFromValidLocalDomain)(request.hostname);
        if (!domainToProxy) {
            if (previewUtils_js_1.VALID_PROXY_DOMAIN_SUFFIXES.includes(request.hostname)) {
                next();
                return;
            }
            else {
                const message = `Can't make a proxy request, the domain '${request.hostname}' is not a valid proxy-able domain`;
                return response.status(400).send(message);
            }
        }
        (0, previewUtils_js_1.trackPreviewEvent)('proxy-page-route');
        const urlToProxy = `http://${domainToProxy}${request.originalUrl}`;
        try {
            await (0, proxyPage_js_1.proxyPage)(response, urlToProxy, sessionInfo);
        }
        catch (e) {
            next(e);
        }
    };
};
exports.buildProxyPageRouteHandler = buildProxyPageRouteHandler;
